**************************** Summary *******************


Introduction

 - Everything in Python is an object
 - How functions work.
 - First-Class Objects.
 - Inner Functions.
 - Higher-Order Functions.

Functions in Python

A function is an instance of the Object type.

Assigning a function to a variable

Returning a function from a function

Passing Functions as Arguments to other Functions

A function is an object. Because of that, a function can be assigned to a variable. The function can be accessed from that variable.

Decorators

Introduction to Decorators
 - It is also called meta programming where a part of the program attempts to change another part of program at compile time
 - Passed as an argument
 - Modified
 - Reuse these customised behaviours on multiple functions/classes.
 - Python decorator modify data

Using Python decorators with the @ symbol

Syntax of Python Decorators





Decorating functions with parameters
























Takeaway
 - A Decorator is a function that takes another function and extends the behavior of the latter function without explicitly modifying it.

 - Higher-order function is a function that takes a function as an argument or returns a function.


